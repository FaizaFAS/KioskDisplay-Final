<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox7.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="Timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>106, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1AAAA5wAAADgAAACZAAAAZgAA
        AHQAAADwAAAAcAAAAJkAAABmAAAAzAAAANYAAACjAAAAqwAAAKIAAABZAAAA2AAAANcAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAADCAAAAZgAA
        AJkAAABmAAAASgAAALEAAACZAAAAmQAAAGYAAADMAAAAUgAAAKMAAADOAAAAzQAAAFgAAACFAAAA4gAA
        AAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAA
        AKoAAAAfAAAAzwAAAKwAAACTAAAAwwAAAD0AAACZAAAAZgAAAMwAAACPAAAAowAAAMkAAAD4AAAAbAAA
        AOoAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADEAAAA2QAAAG4AAAC/AAAA0gAAAIwAAADeAAAAfAAAANYAAADCAAAAzAAAAK0AAACjAAAAjQAA
        APAAAABiAAAA4AAAAM8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAADAAAAFAAAAB8AAAApAAAACwAAAAMAAAAAAAAAAwAAAAMAAAApAAAAMwAA
        ACEAAAAUAAAAKQAAAA0AAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/owAAfzwAAH8CAAB/2wAAfykAAAAAAAB/hgAA
        f/sAAH8jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfykAAH/BAAAAAAAAf2IAAH+jAAAAAAAA
        fxQAAH/0AAB/kwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/owAAfz0AAH8DAAB/2QAA
        fycAAAAAAAB/jgAAf/kAAH8aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfykAAH+9AAAAAAAA
        f2EAAH+iAAAAAAAAfxQAAH/0AAB/kwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/owAA
        fzgAAH8EAAB/1QAAfyYAAAAAAAB/jgAAf/UAAH8VAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAH9QAAAAAAAAf2kAAH+eAAAAAAAAfxQAAH/1AAB/kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAH8EAAB/3wAAfyMAAAAAAAB/jgAAf/UAAH8VAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf1oAAH+TAAAAAAAAfxMAAH/1AAB/jwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/FQAAfxgAAAAAAAB/jgAAf/UAAH8UAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfxMAAH/1AAB/jwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/jgAA
        f/UAAH8UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAH+PAAB/jwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAfxIAAH8UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////4AAD/+AAA//gAAf/4AAH/+AgB/4AAAB+AAAAfgAAAH4AAAB/AA
        AQf+AAB//gAAf/4AAH/+AAB//gAAf/8AAP//AAD///wB///8Ef//+SP///gj///yR///8Ef///SP///4
        j///+R////kf///+P////j////5////+f/8=
</value>
  </data>
</root>