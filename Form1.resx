<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACYAAAAoCAYAAACSN4jeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAALiIAAC4iAari3ZIAAAAGYktHRAD/AP8A/6C9p5MAAAAHdElNRQfiChkRHBOP1MVZ
        AAAFTUlEQVRYR82Y60+TVxzH/S+WrUXcCxOzF1s2k83txbIsM5nxxTYcOHReJhIQUNmmG3NDYW6LLsgY
        IpcMKHLpGFbAyigXERQEBLkJkXJvKbQILXIrtLbP8905D7RYA+2xPJA9yUmbnJPnfJ7v73rOJvxPn02E
        i1+VjbOCN+aCmyDDatrQT3ALxs82AEObyZCC134EbvJf8HbzRgDybsF6uhrQXvo2AZMsDV9o7x/G/Pz8
        esO5B+M4DobBWnCDvk44a+8WWA3Z4Gzrqpx7MCoLVac450fIr/hDlnQao40+gnl5XSC4mWbwPLce6nHu
        nX9pSwo3MT4uQN6trsK9wp3gBqSA5jVw+l/ALRjEhmMDe3ZXnuehGx6GQhYFUxtVT0IC4x3YjUXg7KL5
        3ouDOSCpepVlN9Ba8hb4QRocvsS8h2CfaSMJaPUMxCit92B0A54ER2+PGsrsCMx2LaonmNfwOzjLY0aG
        FZetDczxytmZGSgVWRhret0Zvbz2PdhNSpL3FrwBFAeM7my322Edjn0m51HzbgGnC4Jtut1dfVkJXDww
        wbSGC8+BSaCrl0Ce+SvMjyvAzzSQALGyKCgumF3/mwuYrV+KrKQw2Ea+d1aOrvpUEhseg0NcMG4k0gWs
        9tp2aNr/FCLWUdbK8gJZSprnzM+iu2PNHWUMum9JheQ73ekDRc7PgO4LJ5SmVoKr6Vdgs9k8vVZcsHnz
        PDra2mBoOwhF6i5MD1x0Qs09kiIlIRaTJqb2SVwwIQBsk6QD+Qx15fEkp73rBFOkfYyB/n5PSjnmxQej
        pSknORhPh08tm7DOB8WF10G7FcZHXDDe9gTNqr3of0Ad/tXFOkrG1aQQmIxGRiZhmbhgZkMh8jPPEIff
        71Srv0aCqkqSwzynCJdegantYflU6ltl+UEw9rgm2b9TDrA6/PqATQwpUFFMolD7oVOtyXYpFAX5L6qW
        eKakailkJ2HRRrsk2Or8HdBqNCyCP79mrT7GwTw1CG33TTxq/IOkh23L3QVx+szks7BaLMSVLeCtI0Iq
        YXzWAEY3M8khT9qFpjty0iQuOzyNRl29FLXlfwHkXIqRY0KfBu37MA7ksZwTvASjB5CJLPTclqKiVAm7
        nqjlPOItHvXKcj5AX4eKAG11maOHGQbzegfGW4bJhjtQmhMA02gj+f+Gy+a01ZalnIdldojMvekyp733
        ClpbWjxZ1Dswbpa8mKiiyv8GlvGSFXuw6lvl4J8oyRw5TS2puaCWIj1+H8bGxtYHzDrZLGzYptqNIXUj
        FtRL/f4SgCp7J0x9aWTNcjBQOEXqbnQ+fMiSPrxTbGbKCGPrNtj6pBjsvIGKwksYf7AIp6mTIk+WQFrq
        UBclDU1SFF1XsNZL78BoeamvUWLorg+5PtiK2ZF/UFVWiNTLCSgqkGFaK3PWSocZO1Qvszj92rsL2uw1
        NTYQ5bYvQug+B6//lqQGqhS9IVqMzqkOCfT3JShOewkGvd6Tb60djL7BarXi9s0EqKskeNrr6mcUar57
        MxLjziI5KQkVqjKY5+Y2BkxFNos4EYmYczH46YfvcDH2JOLPB+FCTARio6NwLvoMLicmIjg0HHK5nBXK
        +1pJzagf1ePU6Sh8eThIGAePBONY+AkC+jXCj0fiaEiYc47Ox8VdYnV878HU6h58dTTEZWMH4Gq/oWHH
        oRliLujeRaVarYaffwD27A3E/kNH3AIG7DuAT/z88anfHtRUV7Oa0zsw2rvT7N3c1ITSkhJcKyhAlkyG
        jIwMZKSTQX7lubkoVChQWVmJFlKC6NWVZYH5HkMAE2zqZrB+pajr/gP9MCy+ay7epQAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="Timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>106, 17</value>
  </metadata>
  <data name="PictureBox12.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEEAAAA5CAYAAABphkbpAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr4AAA6+AepCscAAAARySURBVGhD7ZpLbA1RGMdLUkJKPVNtWVSr3hWsiCLCHrGy
        1Qg21l6pikjqESIeG5USj9KNxII0RBoROyGWEkRZIdUq1VZv/b+buZOvp+c1kzhz5t7e5OSemfnOnO/7
        n9+c882jqGj8l5wCIyMjU1GKk/PAg54zmcwplH0euJKMCwi+DKUX5WPB0oDgryL47A/1/ckMRYK9Iuj5
        KH+YCJ8KjgZOQcHSABEe5IJnInShPilBQN12DRHqRRGCueGAW08S7g1CPJbQ8LnQaFgzTgNIBA3tEhq+
        YP+UhEF11z2CrVPQcNidFx70BCHuSWjoxr5SD9xz4wLRgJKRCHHEjQcOekF8C0zdwKZNcln8yBsaEGAn
        yk6dEDi+EuWvhIZjJgG9P47AtgVJ0Cv8TzAIIZsbenCO6d4HagjsERvd7Qbb5QoaGtMuwhN2b/Aa9YkF
        RwNGdiO/zrG9wyDCMgUNTWmn4Smj4Y0FDWNWCgjTk+qVAs5vEGgwrRREw7BkpbiYTzS8N90pQoTbEhF+
        Y39FaoWA8+sFGvbogoHtEkUWecl7EXRrOo7xueEDticbJslbEhr60a7cWyFowoODL1BmyZzE/nUCDQ0G
        ERYr7jAveysCgmwIssNmlZOw6WArhQ0NNyU0DOA8lV4KAcfeBSL80tCwSsgD9hpoqFXMDX7SAGdPslE+
        raEhvEdAG3r7pH3CDJv00IBgZsDh3oCGPtRnK+aGUVkh7LRvn3CcaJDdYV7x9ZI4wWg4q6HhLrP7jnqJ
        YclslcwNgxDH+KzCuVBwdGaQ4tL7xT5sz1HQsJRnhagfspgbhiRC3HEepE2HCKjJkoYwK0SbryjTYtAw
        jHYrbPxyakMrA0SgR2NZGlTJDWWFQt6gfaaI8yxCGUwTDY2MhmuauSHMCgMatE+RcE7Z3ECrqJ80wLHu
        gIYh1KsUc8OorBB2Rw1zQw1sBiQ0tDnF3bYzOMtpaNHQEOYBRAMC1L5vkNEQiO0fDcFKQcsfzQ20zi9U
        0EB5QPj8wIKGatncgPPftx0gp3Zw7DibG2xpoO+Y5houixbxkvCZhlIElKOBlrNqDQ1hVgi78wYRiAZZ
        3tDudJRtOxPmhuuqdvxaRxt6ilRmECL88EtYautsfXNmR3kD5QsBrrSc1WhoCEfXgoaq3HkFETqcBRel
        Izh7jjnaaksD2swz0HBGMTfUR/HPiS0FAyF+5lYK1GsVNNDohnmABQ30QWj2vAINz5wEFrUTOMtHTbmc
        we4GW1FobtA+RcLx5lTSEDi9VkFDJQLrZ0J8w3aXplCCNeYH+86oA+XEno8a6g81WeQFWWBR96GPTU4C
        i9IJLXvCNbwV2/SJr1hWy/KAGCL4T0PUoGLab44yUKNs0SE9Jdr9H8rBmMHEagb/n8cWAY0bY/XqYSPE
        siWyEAEF9Do8L34Q4SUC0X4uNEYkNAqfE+aFCggCMe2ypgH2JWiQNxSwfONtFBGKIUI5KxWoU8nty22L
        ++k4P6Y7h2jLz8+PqfqM6k/2PNYiFKrhP1thCJgKQhyvAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1AAAA5wAAADgAAACZAAAAZgAA
        AHQAAADwAAAAcAAAAJkAAABmAAAAzAAAANYAAACjAAAAqwAAAKIAAABZAAAA2AAAANcAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAADCAAAAZgAA
        AJkAAABmAAAASgAAALEAAACZAAAAmQAAAGYAAADMAAAAUgAAAKMAAADOAAAAzQAAAFgAAACFAAAA4gAA
        AAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAA
        AKoAAAAfAAAAzwAAAKwAAACTAAAAwwAAAD0AAACZAAAAZgAAAMwAAACPAAAAowAAAMkAAAD4AAAAbAAA
        AOoAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADEAAAA2QAAAG4AAAC/AAAA0gAAAIwAAADeAAAAfAAAANYAAADCAAAAzAAAAK0AAACjAAAAjQAA
        APAAAABiAAAA4AAAAM8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAADAAAAFAAAAB8AAAApAAAACwAAAAMAAAAAAAAAAwAAAAMAAAApAAAAMwAA
        ACEAAAAUAAAAKQAAAA0AAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/owAAfzwAAH8CAAB/2wAAfykAAAAAAAB/hgAA
        f/sAAH8jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfykAAH/BAAAAAAAAf2IAAH+jAAAAAAAA
        fxQAAH/0AAB/kwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/owAAfz0AAH8DAAB/2QAA
        fycAAAAAAAB/jgAAf/kAAH8aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfykAAH+9AAAAAAAA
        f2EAAH+iAAAAAAAAfxQAAH/0AAB/kwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/owAA
        fzgAAH8EAAB/1QAAfyYAAAAAAAB/jgAAf/UAAH8VAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAH9QAAAAAAAAf2kAAH+eAAAAAAAAfxQAAH/1AAB/kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAH8EAAB/3wAAfyMAAAAAAAB/jgAAf/UAAH8VAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf1oAAH+TAAAAAAAAfxMAAH/1AAB/jwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/FQAAfxgAAAAAAAB/jgAAf/UAAH8UAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfxMAAH/1AAB/jwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/jgAA
        f/UAAH8UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAH+PAAB/jwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAfxIAAH8UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////4AAD/+AAA//gAAf/4AAH/+AgB/4AAAB+AAAAfgAAAH4AAAB/AA
        AQf+AAB//gAAf/4AAH/+AAB//gAAf/8AAP//AAD///wB///8Ef//+SP///gj///yR///8Ef///SP///4
        j///+R////kf///+P////j////5////+f/8=
</value>
  </data>
</root>